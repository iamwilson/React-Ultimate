ReactDOM - done
Props - done
State (setState) - done
Stateful (class) & stateless (function) - done
Life cycle methods (constructor, render, componentDidMount) - done
Passing data between components - done
Events - done
Passing arguments to Event handlers - done
Passing functions to child component - done
Controlled & uncontrolled components - done
keys & refs - done
Routing - done
Redux - done
Services - done

React Fragments -
ComponentDidCatch - 

Container x Presenter paradigm
Code splitting
Swagger
Testing

PWA
Web worker
Service worker
Named exports
Synthetic events

props and state changes - trigger a render update

setState - async
state - local state of the component, cannot be accessed & modified outside the component. only be used & modified inside the component.
props - make components reusable. gives components ability to receive data from parent component in the form of props.
shallowCopy - points to the same location in memory as source
deepCopy - points to a different location in memory, but the contents are the same.

controlled Component 
 - takes its current value through props and notifies changes through callbacks like onChange. 
 - A parent component handles the callback and manages its own state 

uncontrolled Component
 - stores its own state internally
 - you query the DOM using a ref to find its current value.
 
Redux - used to sync state with server

this keyword - in JavaScript, class methods are not bound by default.

Redux Thunk - When an action creator returns a function, that function will get executed by the Redux Thunk middleware
Any time you attempt to dispatch a function instead of an action object, Redux Thunk middleware will call that function 
with dispatch method itself as the first argument.

-- Stateless Component vs Pure Component
-- 